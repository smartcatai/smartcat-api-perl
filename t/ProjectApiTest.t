=begin comment

Smartcat Integration API

No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: v1

Generated by: https://github.com/swagger-api/swagger-codegen.git

=end comment

=cut

#
# NOTE: This class is auto generated by Swagger Codegen
# Please update the test cases below to test the API endpoints.
# Ref: https://github.com/swagger-api/swagger-codegen
#
use Test::More tests => 1; #TODO update number of test cases
use Test::Exception;

use lib 'lib';
use strict;
use warnings;

use_ok('Smartcat::Client::ProjectApi');

my $api = Smartcat::Client::ProjectApi->new();
isa_ok($api, 'Smartcat::Client::ProjectApi');

#
# project_add_document test
#
{
    my $project_id = undef; # replace NULL with a proper value
    my $document_model = undef; # replace NULL with a proper value
    my $disassemble_algorithm_name = undef; # replace NULL with a proper value
    my $external_id = undef; # replace NULL with a proper value
    my $meta_info = undef; # replace NULL with a proper value
    my $target_languages = undef; # replace NULL with a proper value
    my $result = $api->project_add_document(project_id => $project_id, document_model => $document_model, disassemble_algorithm_name => $disassemble_algorithm_name, external_id => $external_id, meta_info => $meta_info, target_languages => $target_languages);
}

#
# project_add_language test
#
{
    my $project_id = undef; # replace NULL with a proper value
    my $target_language = undef; # replace NULL with a proper value
    my $result = $api->project_add_language(project_id => $project_id, target_language => $target_language);
}

#
# project_build_statistics test
#
{
    my $project_id = undef; # replace NULL with a proper value
    my $only_exact_matches = undef; # replace NULL with a proper value
    my $result = $api->project_build_statistics(project_id => $project_id, only_exact_matches => $only_exact_matches);
}

#
# project_cancel_project test
#
{
    my $project_id = undef; # replace NULL with a proper value
    my $result = $api->project_cancel_project(project_id => $project_id);
}

#
# project_complete_project test
#
{
    my $project_id = undef; # replace NULL with a proper value
    my $result = $api->project_complete_project(project_id => $project_id);
}

#
# project_create_project test
#
{
    my $project = undef; # replace NULL with a proper value
    my $result = $api->project_create_project(project => $project);
}

#
# project_delete test
#
{
    my $project_id = undef; # replace NULL with a proper value
    my $result = $api->project_delete(project_id => $project_id);
}

#
# project_get test
#
{
    my $project_id = undef; # replace NULL with a proper value
    my $result = $api->project_get(project_id => $project_id);
}

#
# project_get_all test
#
{
    my $created_by_user_id = undef; # replace NULL with a proper value
    my $project_name = undef; # replace NULL with a proper value
    my $external_tag = undef; # replace NULL with a proper value
    my $client_ids = undef; # replace NULL with a proper value
    my $result = $api->project_get_all(created_by_user_id => $created_by_user_id, project_name => $project_name, external_tag => $external_tag, client_ids => $client_ids);
}

#
# project_get_completed_work_statistics test
#
{
    my $project_id = undef; # replace NULL with a proper value
    my $result = $api->project_get_completed_work_statistics(project_id => $project_id);
}

#
# project_get_glossaries test
#
{
    my $project_id = undef; # replace NULL with a proper value
    my $result = $api->project_get_glossaries(project_id => $project_id);
}

#
# project_get_project_statistics test
#
{
    my $project_id = undef; # replace NULL with a proper value
    my $only_exact_matches = undef; # replace NULL with a proper value
    my $result = $api->project_get_project_statistics(project_id => $project_id, only_exact_matches => $only_exact_matches);
}

#
# project_get_project_statistics_obsolete test
#
{
    my $project_id = undef; # replace NULL with a proper value
    my $only_exact_matches = undef; # replace NULL with a proper value
    my $result = $api->project_get_project_statistics_obsolete(project_id => $project_id, only_exact_matches => $only_exact_matches);
}

#
# project_get_project_translation_memories test
#
{
    my $project_id = undef; # replace NULL with a proper value
    my $result = $api->project_get_project_translation_memories(project_id => $project_id);
}

#
# project_restore_project test
#
{
    my $project_id = undef; # replace NULL with a proper value
    my $result = $api->project_restore_project(project_id => $project_id);
}

#
# project_set_glossaries test
#
{
    my $project_id = undef; # replace NULL with a proper value
    my $glossary_ids = undef; # replace NULL with a proper value
    my $result = $api->project_set_glossaries(project_id => $project_id, glossary_ids => $glossary_ids);
}

#
# project_set_project_translation_memories_by_languages test
#
{
    my $tm_for_languages_models = undef; # replace NULL with a proper value
    my $project_id = undef; # replace NULL with a proper value
    my $result = $api->project_set_project_translation_memories_by_languages(tm_for_languages_models => $tm_for_languages_models, project_id => $project_id);
}

#
# project_set_translation_memories_for_whole_project test
#
{
    my $tm_models = undef; # replace NULL with a proper value
    my $project_id = undef; # replace NULL with a proper value
    my $result = $api->project_set_translation_memories_for_whole_project(tm_models => $tm_models, project_id => $project_id);
}

#
# project_update_project test
#
{
    my $project_id = undef; # replace NULL with a proper value
    my $model = undef; # replace NULL with a proper value
    my $result = $api->project_update_project(project_id => $project_id, model => $model);
}


1;
